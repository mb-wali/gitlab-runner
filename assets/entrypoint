#!/bin/bash

# gitlab-ci-multi-runner data directory
DATA_DIR="/etc/gitlab-runner"
CONFIG_FILE=${CONFIG_FILE:-$DATA_DIR/config.toml}
# custom certificate authority path
CA_CERTIFICATES_PATH=${CA_CERTIFICATES_PATH:-$DATA_DIR/certs/ca.crt}
LOCAL_CA_PATH="/usr/local/share/ca-certificates/ca.crt"

update_ca() {
  echo "Updating CA certificates..."
  cp "${CA_CERTIFICATES_PATH}" "${LOCAL_CA_PATH}"
  update-ca-certificates --fresh >/dev/null
}

if [ -f "${CA_CERTIFICATES_PATH}" ]; then
  # update the ca if the custom ca is different than the current
  cmp --silent "${CA_CERTIFICATES_PATH}" "${LOCAL_CA_PATH}" || update_ca
fi

# RUNNER_ENV doesn't do multi values
# https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/259
# build --env XXX parameters from RUNNER_ENV_X variables
# support up to 256 variables
runner_env() {
       local i env
       for i in $(seq 1 256); do
               env=$(eval echo \${RUNNER_ENV_${i}})
               test -n "$env" || break
               printf -- "--env %s\n" "$env"
       done
}

if [ ! -f $CONFIG_FILE ] || ! grep -q "runners" "$CONFIG_FILE" ]; then
	echo "Runners not registered. Registering..."
	gitlab-runner register --non-interactive $(runner_env)
	echo "Registration done."
else
	echo "Runner already registered. Skipping registration."
fi

# hide it after use
unset REGISTRATION_TOKEN

# launch gitlab-ci-multi-runner passing all arguments
exec gitlab-runner "$@"